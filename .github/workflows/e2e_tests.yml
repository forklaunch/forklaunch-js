name: E2E Tests

on:
  push:
    branches:
      - main
    paths:
      - "cli/**"
  pull_request:
    paths:
      - "cli/**"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group: [1, 2, 3, 4, 5, 6]
        include:
          - group: 1
            name: "Init Tests (non-application)"
            pattern: "init_!(application*).sh"
          - group: 2
            name: "Sync Tests"
            pattern: "sync*.sh"
          - group: 3
            name: "Change Tests"
            pattern: "change*.sh"
          - group: 4
            name: "Delete Tests"
            pattern: "delete*.sh"
          - group: 5
            name: "Other Tests"
            pattern: "!(init*|sync*|change*|delete*).sh"
          - group: 6
            name: "Init Application Tests"
            pattern: "init_application*.sh"

    name: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build project
        working-directory: ./cli
        run: cargo build --release

      - name: Create .forklaunch directory
        run: mkdir -p ~/.forklaunch

      - name: Create token file
        run: touch ~/.forklaunch/token

      - name: Run ${{ matrix.name }}
        working-directory: ./cli/tests
        run: |
          set -e
          shopt -s extglob nullglob
          test_count=0
          failed_test=""
          for test_script in ${{ matrix.pattern }}; do
            if [ -f "$test_script" ]; then
              echo "[INFO] Running test: $test_script"
              test_count=$((test_count + 1))
              if ! ./"$test_script"; then
                failed_test="$test_script"
                echo "[ERROR] Test failed: $test_script"
                exit 1
              fi
              echo "[OK] Test passed: $test_script"
            fi
          done
          echo "[SUCCESS] All $test_count tests passed in group: ${{ matrix.name }}"
