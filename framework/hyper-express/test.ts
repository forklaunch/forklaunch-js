import { noop } from '@forklaunch/common';
import { OpenTelemetryCollector } from '@forklaunch/core/http';
import {
  MiddlewareNext,
  Request,
  Response
} from '@forklaunch/hyper-express-fork';
import { file, SchemaValidator, string } from '@forklaunch/validator/typebox';
import { forklaunchExpress, forklaunchRouter } from './index';
import { get } from './src/handlers/get';
import { post } from './src/handlers/post';

const typeboxSchemaValidator = SchemaValidator();
const openTelemetryCollector = new OpenTelemetryCollector('test');

const forklaunchApplication = forklaunchExpress(
  typeboxSchemaValidator,
  openTelemetryCollector
);

const forklaunchRouterInstance = forklaunchRouter(
  '/testpath',
  typeboxSchemaValidator,
  openTelemetryCollector
);

const expressMiddleware = (
  req: Request,
  res: Response,
  next: MiddlewareNext
) => {
  noop(req, res, next);
  next();
};

const getHandler = get(
  typeboxSchemaValidator,
  '/test',
  {
    name: 'Test',
    summary: 'Test Summary',
    responses: {
      200: {
        file: file('test.txt', 'text/plain')
      }
    }
  },
  expressMiddleware,
  async (_req, res) => {
    res.status(200).send(
      new File(
        [
          `Hello World
This is a test file generated by the server.

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ultricies, justo a facilisis posuere, urna massa dictum nisi, eu hendrerit erat est a velit.

Curabitur dignissim, dolor ut consequat tincidunt, sapien velit sodales sem, et placerat nunc enim ornare enim. Vivamus at tristique risus, nec posuere elit. Donec at tristique massa, non maximus enim.

- Item 1: The quick brown fox jumps over the lazy dog.
- Item 2: Etiam eget ligula eu lectus lobortis condimentum.
- Item 3: Mauris accumsan, massa non consectetur hendrerit, erat urna scelerisque sapien, sed cursus augue magna a lorem.

Nulla facilisi. Proin facilisis, justo nec porttitor ullamcorper, nisi nibh dictum ex, eu suscipit erat enim in velit. Pellentesque a consequat nunc. 

Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Suspendisse potenti.

End of file.
`
        ],
        'test.txt',
        { type: 'text/plain' }
      )
    );
  }
);

const postHandler = post(
  typeboxSchemaValidator,
  '/test',
  {
    name: 'Test',
    summary: 'Test Summary',
    body: {
      f: string
    },
    responses: {
      200: {
        contentType: 'text/event-stream',
        event: {
          id: string,
          data: string
        }
      }
    }
  },
  expressMiddleware,
  async (req, res) => {
    // res.status(200).send(req.body.f.name);
    // res.status(200).send(req.body.test);
    res.status(200).sseEmitter(async function* () {
      for (let i = 0; i < 100; i++) {
        yield {
          id: i.toString(),
          data: `Hello World ${req.body.f}`
        };
        await new Promise((resolve) => setTimeout(resolve, 100));
      }
      return;
    });
  }
);

forklaunchRouterInstance.get('/test', getHandler);
forklaunchRouterInstance.post('/test', postHandler);
// const r = await m.post('/testpath/test', {
//   body: {
//     f: 'test'
//   }
// });
// if (r.code === 200) {
//   console.log(r.response);
// }

// console.log(r);

forklaunchApplication.use(forklaunchRouterInstance);

forklaunchApplication.listen(6935, () => {
  console.log('server started on 6935');
});
