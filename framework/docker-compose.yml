volumes:
  forklaunch-postgres-data:
    driver: local

networks:
  forklaunch-network:
    name: forklaunch-network
    driver: bridge

services:
  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: forklaunch-pg
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: forklaunch-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    networks:
      - forklaunch-network
    volumes:
      - forklaunch-postgres-data:/var/lib/postgresql/forklaunch/data

  # client:
  #   hostname: client
  #   container_name: forklaunch-client
  #   restart: always
  #   build:
  #     context: ./client
  #     dockerfile: ./Dockerfile.dev
  #   image: forklaunch_client:latest
  #   environment:
  #     ENV: development
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - forklaunch-network
  #   volumes:
  #     - ./client/src:/app/src

  iam:
    hostname: iam
    container_name: forklaunch-iam
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.${RUNTIME}.dev
    environment:
      ENV: development
      PORT: 8000
    depends_on:
      - postgres
      - redis
    ports:
      - 8000:8000
    networks:
      - forklaunch-network
    volumes:
      - ./iam:/app/iam
    working_dir: /app/iam

  billing:
    hostname: billing
    container_name: forklaunch-billing
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.${RUNTIME}.dev
    environment:
      ENV: development
      PORT: 8001
    depends_on:
      - postgres
      - redis
    ports:
      - 8001:8001
    networks:
      - forklaunch-network
    volumes:
      - ./billing:/app/billing
    working_dir: /app/billing

  redis:
    image: redis/redis-stack-server:latest
    container_name: forklaunch-redis
    depends_on:
      - postgres
    restart: always
    ports:
      - '6379:6379'
    networks:
      - forklaunch-network
