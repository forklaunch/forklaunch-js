volumes:
  {{app_name}}-postgres-data:
    driver: local

networks:
  {{app_name}}-network:
    name: {{app_name}}-network
    driver: bridge

services:
  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: {{app_name}}-pg
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: {{app_name}}-dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    networks:
      - {{app_name}}-network
    volumes:
      - {{app_name}}-postgres-data:/var/lib/postgresql/{{app_name}}/data
  redis:
    image: redis/redis-stack-server:latest
    container_name: {{app_name}}-redis
    depends_on:
      - postgres
    restart: always
    ports:
      - '6379:6379'
    networks:
      - {{app_name}}-network {{#projects}}{{#port}}
  {{name}}:
    hostname: {{name}}
    container_name: {{app_name}}-{{name}}-{{runtime}}
    image: {{app_name}}_{{name}}_{{runtime}}:latest
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      ENV: development
      HOST: 0.0.0.0
      PORT: '{{port}}'
      DB_NAME: {{app_name}}-dev
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_PORT: '5432'
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    ports:
      - {{port}}:{{port}}
    networks:
      - {{app_name}}-network
    volumes:
      - ./{{name}}:/{{app_name}}  /{{name}}
      - /{{app_name}}/{{name}}/dist {{#is_node}}
      - /{{app_name}}/{{name}}/node_modules {{/is_node}}
    working_dir: /{{app_name}}/{{name}}
    entrypoint: ["{{#is_node}}pnpm{{/is_node}}{{#is_bun}}bun{{/is_bun}}", "run", "dev"] {{/port}}{{/projects}}

